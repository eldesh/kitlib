_require "basis.smi"
_require "POLYHASH.sig"

structure Polyhash (* : POLYHASH *) = (* Requires Word, Array *)
struct
  type ('key, 'data) hash_table (= boxed)

  val mkTable     : ('key -> int) * ('key * 'key -> bool) -> int * exn 
  	      -> ('key, 'data) hash_table
  val numItems    : ('key, 'data) hash_table -> int
  val insert      : ('key, 'data) hash_table -> 'key * 'data -> unit
  val peekInsert  : ('key, 'data) hash_table -> 'key * 'data 
  	      -> 'data option
  val find        : ('key, 'data) hash_table -> 'key -> 'data
  val peek        : ('key, 'data) hash_table -> 'key -> 'data option
  val remove      : ('key, 'data) hash_table -> 'key -> 'data
  val listItems   : ('key, 'data) hash_table -> ('key * 'data) list
  val apply       : ('key * 'data -> unit) -> ('key, 'data) hash_table -> unit
  val map         : ('key * 'data -> 'res) -> ('key, 'data) hash_table 
  	      -> ('key, 'res) hash_table
  val filter      : ('key * 'data -> bool) -> ('key, 'data) hash_table -> unit
  val transform   : ('data -> 'res) -> ('key, 'data) hash_table 
  	      -> ('key, 'res) hash_table
  val copy        : ('key, 'data) hash_table -> ('key, 'data) hash_table
  val bucketSizes : ('key, 'data) hash_table -> int list

  (* Look for an item and return the number of values with the same hash *)
  val peekSameHash: ('key, 'data) hash_table -> 'key -> int * int

  val clear       : ('key, 'data) hash_table -> unit
end

